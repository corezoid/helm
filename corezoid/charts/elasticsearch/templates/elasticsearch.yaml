{{- if ( .Values.global.elasticsearch.internal )}}


apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-deployment
  labels:
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName }}
spec:
  replicas: 1
  selector:
    matchLabels:
      tier: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.global.product }}
        tier: {{ .Values.appName }}
    spec:
      {{ if .Values.global.elasticsearch.affinity }}
      affinity:
        {{ .Values.global.elasticsearch.affinity | toYaml | nindent 8 | trim }}
      {{- end}}
      {{- with .Values.global.elasticsearch.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.global.elasticsearch.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{ .Values.global.elasticsearch.topologySpreadConstraints | toYaml | nindent 8 | trim }}
      {{- end}}
      initContainers:
        - name: increase-vm-max-map
          image: {{- if .Values.global.elasticsearch.busyboxImage }}
                    {{ .Values.global.elasticsearch.busyboxImage }}
                  {{- else }}
                    "{{ .Values.busyboxImage.registry }}/{{ .Values.busyboxImage.repository }}:{{ default .Values.busyboxImage.tag .Values.global.elasticsearch.busyboxImagetag }}"
                  {{- end }}
          command: ["sysctl", "-w", "vm.max_map_count=262144"]
          securityContext:
            privileged: true
        - name: increase-fd-ulimit
          image: {{- if .Values.global.elasticsearch.busyboxImage }}
                    {{ .Values.global.elasticsearch.busyboxImage }}
                  {{- else }}
                    "{{ .Values.busyboxImage.registry }}/{{ .Values.busyboxImage.repository }}:{{ default .Values.busyboxImage.tag .Values.global.elasticsearch.busyboxImagetag }}"
                  {{- end }}
          command: ["sh", "-c", "ulimit -n 65536"]
          securityContext:
            privileged: true
      containers:
        - name: {{ .Values.appName }}
          imagePullPolicy: {{ .Values.global.imagePullPolicy | default "IfNotPresent" }}
          image: {{- if .Values.global.elasticsearch.image }}
                   {{ .Values.global.elasticsearch.image }}
                 {{- else }}
                   "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ default .Values.image.tag .Values.global.elasticsearch.tag }}"
                 {{- end }}
          env:
            - name: discovery.type
              value: single-node
            - name: ES_JAVA_OPTS
              value: "-Xmx1g -Xms1g -Dlog4j2.formatMsgNoLookups=true"
            - name: xpack.security.enabled
              value: "false"
            - name: action.auto_create_index
              value: "false"
          ports:
            - name: es
              protocol: TCP
              containerPort: 9200
          resources:
            requests:
              cpu: 1000m
              memory: 1Gi
            limits:
              cpu: 1000m
              memory: 2Gi
          readinessProbe:
            httpGet:
              path: /_cluster/health
              port: 9200
            initialDelaySeconds: 20
          livenessProbe:
            httpGet:
              path: /_cluster/health?local=true
              port: 9200
            initialDelaySeconds: 90
{{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.global.imagePullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
{{- end }}

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.global.elasticsearch.secret.data.host }}
  labels:
    app: {{ .Values.appName }}
spec:
  selector:
    app: {{ .Values.global.product }}
    tier: {{ .Values.appName }}
  ports:
  - protocol: TCP
    port: 9200
    targetPort: 9200
{{- end }}
