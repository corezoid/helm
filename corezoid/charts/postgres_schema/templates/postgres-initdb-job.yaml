apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-init-database-{{ if hasKey .Values.global.db "postgres_schema" }}{{ if hasKey .Values.global.db.postgres_schema "version" }}{{ .Values.global.db.postgres_schema.version }}{{ else }}{{ .Chart.AppVersion }}{{ end }}{{ else }}{{ .Chart.AppVersion }}{{ end }}
  labels:
    app: {{ .Values.global.product }}
    tier: postgres-job
  annotations:
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  template:
    metadata:
      name: postgres-init-database
      labels:
        app: {{ .Values.global.product }}
        tier: postgres-job
    spec:
      {{- if .Values.global.db.bouncer_affinity }}
      affinity:
        {{ .Values.global.db.bouncer_affinity | toYaml | nindent 8 | trim }}
      {{- end }}
      {{- with .Values.global.db.bouncer_tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: OnFailure
      containers:
        - image: "{{ .Values.global.imageRegistry }}/{{ .Values.global.repotype }}/{{ .Values.image.repository }}:{{ if hasKey .Values.global.db "postgres_schema" }}{{ if hasKey .Values.global.db.postgres_schema "version" }}{{ .Values.global.db.postgres_schema.version }}{{ else }}{{ .Chart.AppVersion }}{{ end }}{{ else }}{{ .Chart.AppVersion }}{{ end }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy | default "IfNotPresent" }}
          name: postgres-initdb
          args:
            - /bin/sh
            - -c
            - /postgres-schema-versioner/run.sh;
          env:
            - name: SCHEMA_VERSION
              value: {{ if hasKey .Values.global.db "postgres_schema" }}{{ if hasKey .Values.global.db.postgres_schema "version" }}{{ .Values.global.db.postgres_schema.version }}{{ else }}{{ .Chart.AppVersion }}{{ end }}{{ else }}{{ .Chart.AppVersion }}{{ end }}
            - name: POSTGRES_SSLMODE
              value: {{ .Values.global.db.serverTlsSslenabled | quote }}
            - name: SERVER_TLS_SSLMODE
              value: {{ .Values.global.db.serverTlsSslmode | quote }}
            - name: SHARD_COUNT
              value: '{{ .Values.global.db.shards_count }}'
            - name: POSTGRES_DBHOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbhost
            - name: POSTGRES_DBPORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbport
            - name: POSTGRES_DBSUPERUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name}}-root
                  key: dbsuperuser
            - name: POSTGRES_DBSUPERUSERPWD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}-root
                  key: dbsuperuserpwd
            - name: POSTGRES_DBUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbuser
            - name: POSTGRES_DBPWD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbpwd
            - name: FDW_POSTGRES_DBUSER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbuser_fdw
            - name: FDW_POSTGRES_DBPWD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.global.db.secret.name }}
                  key: dbpwd_fdw
{{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range $pullSecret := .Values.global.imagePullSecrets }}
        - name: {{ $pullSecret }}
      {{- end }}
{{- end }}
